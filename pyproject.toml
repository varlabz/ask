[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ask"
version = "0.17.0"
description = "ASK CLI/MCP - AI agent with Model Context Protocol support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13"
authors = [
    { name = "varlabz", email = "varlabz@umdoze.com" }
]
maintainers = [
    { name = "varlabz", email = "varlabz@umdoze.com" }
]
keywords = ["ai", "agent", "cli", "mcp", "llm", "openai", "anthropic", "ollama", "lmstudio"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pydantic-ai",
    "mcp[cli]",
    "pyyaml>=6.0",
    "griffe>=1.7.0",
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.0",
    "prompt-toolkit>=3.0.0",
    "nicegui>=2.24.0",
    "httpx>=0.28.0",
    "pywebview>=6.0",
    "opentelemetry-sdk",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "langfuse>=3.6.0",
    "searxng-mcp",
    "markitdown",
]

[project.urls]
Homepage = "https://github.com/varlabz/ask"
Repository = "https://github.com/varlabz/ask"
Issues = "https://github.com/varlabz/ask/issues"

[project.scripts]
ask-cli = "ask.main_cli:main"
ask-mcp = "ask.main_mcp:main"
ask-run = "ask.main_run:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = "-q"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]

[tool.uv.sources]
searxng-mcp = { git = "https://github.com/varlabz/searxng-mcp" }
markitdown = { git = "https://github.com/varlabz/markitdown-mhtml.git", subdirectory = "packages/markitdown", rev = "mhtml" }

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.13.2",
]
