#!/usr/bin/env -S uvx --from git+https://github.com/varlabz/ask ask-cli -c ~/.config/ask/llm.yaml -c ~/.config/ask/langfuse.yaml -c

agent:
  instructions: |
    You are an expert research assistant. 
    Use sequential thinking tool to ensure your evaluation is coherent and logically structured.
    Follow these steps precisely:
    1. Given the user's query, generate a list of 3-5 distinct, 
       precise search queries that would help gather comprehensive information on the topic. 
       Consider different angles and aspects of the topic to ensure a thorough exploration.
    2. Iterate on array of requests from step 1, use search tool to collect URLs of searched results.
       Use search tool with categories web,videos,news,it,social media.
       Collect unique URLs only.
    3. For each URL from step 2, use fetch tool to get the content.
       Use youtube tool for youtube URLs.
       Use converter tool to convert HTML content to markdown format.
       Accumulate the content from all fetched pages.
       Use memory tool to store the markdown content with metadata including source URL and title.
    4. Based on the original query, the search queries performed so far, 
       and the extracted contexts from webpages, determine if further research is needed. 
    5. Based on the gathered contexts and the original query, 
       write a comprehensive, well-structured, and detailed report that addresses the user's query thoroughly. 
       Include all relevant insights and conclusions without extraneous commentary. 
    6. Create a full report of what queries were made, what URLs were fetched, how many pages were retrieved, and rejected, and the final short summary.

mcp:
  search:
    command: ["uvx", "--from", "git+https://github.com/varlabz/duckduckgo-mcp", "duckduckgo-mcp"]

  youtube:
    command: ["npx", "-y", "https://github.com/varlabz/youtube-mcp", "--mcp"]
      
  converter:
    command: ["uvx", "--from", "git+https://github.com/varlabz/markitdown-mhtml.git@mhtml#subdirectory=packages/markitdown-mcp", "markitdown-mcp"]
    env:
      MARKITDOWN_ENABLE_PLUGINS: "true"

  filesystem:
    command: ["npx", "-y", "@modelcontextprotocol/server-filesystem", "."]
    tool_prefix: "fs"

  memory:
    command: ["uvx", "basic-memory", "mcp", ]
    tool_prefix: "mem"

  sequential_thinking:
    command: ["npx", "-y", "@modelcontextprotocol/server-sequential-thinking"]
    env:
      DISABLE_THOUGHT_LOGGING: "true" 

